#!/usr/bin/env python2
import sys
import os
import glob

SELF = __file__
DIRNAME = os.path.dirname(SELF)
DIRNAME = os.path.abspath(DIRNAME)
HOME = os.getenv('HOME')

def mkdirs(path):
    if os.access(path, os.X_OK):
        return
    os.makedirs(path)


def func(src, removeOnly=False):
    FILENAME = src[len(DIRNAME) + 1:]
    DEST = os.path.join(HOME, FILENAME)
    try:
        if os.path.islink(DEST):
            os.unlink(DEST)
        elif os.path.isfile(DEST):
            os.unlink(DEST)
        elif os.path.isdir(DEST):
            print 'DEST file "%s" is directory. abort.' % DEST
            return False
        elif not os.path.exists(DEST):
            pass
        else:
            assert False, DEST
        if not removeOnly:
            os.symlink(src, DEST)
    except OSError:
        return False
    return True

if __name__ == '__main__':
    UNINSTALL = '-u' in sys.argv
    # install hidden files
    files = glob.glob(os.path.join(DIRNAME, ".*"))
    files += glob.glob(os.path.join(DIRNAME, "*"))

    if not UNINSTALL:
        cmd = 'wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh'
        # check ohmyzsh installation
        if not os.access(os.path.join(os.environ['HOME'], '.oh-my-zsh'), os.F_OK):
            os.system('bash -c "%s"' % cmd)
        os.system('git submodule init && git submodule sync')
        VIM_INSTALL = os.path.join(DIRNAME, 'bin', 'vim-install')
        os.system('bash -c %s' % VIM_INSTALL)
        FONT_CONF_D = os.path.join(HOME, '.config', 'fontconfig', 'conf.d')
        FONTS_DIR = os.path.join(HOME, '.fonts')
        POWERLINE_FONT_DIR = os.path.join(HOME, '.vim', 'bundle', 'powerline', 'font')
        for filename, dst in (('10-powerline-symbols.conf', FONT_CONF_D),
                         ('PowerlineSymbols.otf', FONTS_DIR)):
            mkdirs(dst)
            dst = os.path.join(dst, filename)
            src = os.path.join(POWERLINE_FONT_DIR, filename)
            if os.access(dst, os.F_OK):
                os.unlink(dst)
	    try:
                os.symlink(src, dst)
	    except:
	        pass

    # ignore list
    for F in ('install', 'README', '.git'):
        files.remove(os.path.join(DIRNAME, F))

    for I in files:
        if not func(I, UNINSTALL):
            pass

# vim: set ts=4 sw=4 sts=4 et smarttab smartindent sta
