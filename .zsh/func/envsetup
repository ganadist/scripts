# vim: ts=2 sw=2 nocindent expandtab syntax=sh
{

find_top() {
  local P=$PWD
  while true
  do
    #echo "P : $P"
    [ -f $P/.repo/manifest.xml ] && echo $P && return
    P=$(dirname ${P})
    [ ${P} = '/' ] && break
  done
}

if [ -f .repo/manifest.xml ]; then
  TOP=$PWD
else
  case "$1" in
    "aosp")
      TOP=$HOME/src/work/aosp/android
      ;;
    "mako")
      TOP=$HOME/src/work/aosp/mako
      ;;
    "hammerhead")
      TOP=$HOME/src/work/aosp/hammerhead
      ;;
    "pfxos")
      TOP=$HOME/src/work/aosp/pfxos_mrb
      ;;
    *)
      TOP=$(find_top)
      if [ -z $TOP ]; then
        echo "Please assign project"
        unset TOP
        return 1
      fi
      ;;
  esac
  shift 1
fi

local PLATFORM_VERSION_LINE=$(grep "PLATFORM_SDK_VERSION :="  "${TOP}/build/core/version_defaults.mk")
local VERSION_SDK=${PLATFORM_VERSION_LINE##*:= }

case ${VERSION_SDK} in
  9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20)
    # Sun JDK 6
    ANDROID_JAVA_HOME=/usr/lib/jvm/java-6-jdk/
    ;;
  21 | 22 | 23)
    # OpenJDK 7
    ANDROID_JAVA_HOME=/usr/lib/jvm/java-7-openjdk/
    export LEX=flex
    ;;
  24 | 25)
    # OpenJDK 8
    ANDROID_JAVA_HOME=/usr/lib/jvm/java-8-openjdk/
    export LEX=flex
    ;;
  *)
   echo "API Level \"${VERSION_SDK}\" is not supported"
   return 1
   ;;
esac

parse_product() {
    TARGET_PRODUCT=${3:-$1}
    TARGET_BUILD_VARIANT=${4:-$2}
}

case "$TOP" in
  "$HOME/src/work/aosp/android")
    parse_product hammerhead userdebug "$@"
    ;;
  "$HOME/src/work/aosp/hammerhead")
    parse_product hammerhead user "$@"
    ;;
  "$HOME/src/work/aosp/mako")
    parse_product occam user "$@"
    ;;
  "$HOME/src/work/aosp/honda" | "$HOME/src/work/aosp/pfxos" | "$HOME/src/work/aosp/pfxos_mrb")
    parse_product pfxos_base userdebug "$@"
  ;;

  *)
    ;;
esac

PATH=$PATH_BASE
echo $PATH | grep $ANDROID_JAVA_HOME || JAVA_HOME=$ANDROID_JAVA_HOME > /dev/null

cd "$TOP"
local NEWPWD=$PWD
echo $PWD

# zsh workaround
if which setopt > /dev/null 2>&1 ; then
  setopt nullglob
fi

. build/envsetup.sh

# enable compiler cache
export USE_CCACHE=1

# change output dir for each product and variant
export OUT_DIR=out-${TARGET_PRODUCT}-${TARGET_BUILD_VARIANT}

# setup target
echo run lunch ${TARGET_PRODUCT}-${TARGET_BUILD_VARIANT}
lunch ${TARGET_PRODUCT}-${TARGET_BUILD_VARIANT}

# save return value
local R=$?
[ $R -ne 0 ] && unset OUT_DIR

# zsh workaround because pushd/popd is not valid in same directory
[ $OLDPWD = $NEWPWD ] || cd -

return $R
}
